name: 'AAP on Azure'
on:
  workflow_dispatch:

jobs:
  Ansible:
    name: 'Ansible'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: Add SSH key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.LOCAL_SSH_KEY }}" > /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null	
          ssh-add /home/runner/.ssh/id_rsa
          cp local/id_rsa.pub ~/.ssh/id_rsa.pub

      - name: Install Ansible Collections and Python Dependencies 
        run: |
          if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi
          if [ -f collections/requirements.yml ]; then ansible-galaxy collection install -r collections/requirements.yml; fi
          ansible-galaxy collection install azure.azcollection --force
          pip3 install -r ~/.ansible/collections/ansible_collections/azure/azcollection/requirements.txt
          
      - name: Run ansible playbook
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook lab.azure_deployment.deploy_infrastructure \
            -e "ansible_python_interpreter=`which python3`" \
            -e "aap_red_hat_username=${{ secrets.AAP_RH_USERNAME }}" \
            -e "aap_red_hat_password=${{ secrets.AAP_RH_PASSWORD }}" \
            -e "AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" \
            -e "AZURE_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -e "AZURE_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -e "AZURE_TENANT=${{ secrets.AZURE_TENANT_ID }}" \
            -e "infrastructure_database_server_user=${{ secrets.INFRA_DB_USER }}" \
            -e "infrastructure_database_server_password=${{ secrets.INFRA_DB_PASSWORD }}" \
            -e "aap_admin_password=${{ secrets.AAP_ADMIN_PASSWORD }}"